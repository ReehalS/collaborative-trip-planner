generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  CREATOR
  USER
}

model Activity {
  id             String           @id @default(uuid())
  tripId         String
  suggesterId    String
  activityName   String
  notes          String?
  city           String?
  country        String
  timezone       String
  startTime      DateTime
  endTime        DateTime
  latitude       Float
  longitude      Float
  address        String?
  categories     String[]
  website        String?
  phoneNumber    String?
  numVotes       Int              @default(0)
  avgScore       Float            @default(0)
  votes          Json             @default("[]") // Array of objects containing userId and score
  createdAt      DateTime         @default(now())
  trip           ActivityToTrip[] @relation("ActivityToTrip_Activity")
  UserToActivity UserToActivity[]
}

model ActivityToTrip {
  id         String   @id @default(uuid())
  activityId String
  tripId     String
  activity   Activity @relation(fields: [activityId], references: [id], name: "ActivityToTrip_Activity")
  trip       Trip     @relation(fields: [tripId], references: [id], name: "ActivityToTrip_Trip")
}

model Trip {
  id         String           @id @default(uuid())
  userIds    String[]
  joinCode   String           @unique
  country    String
  city       String?
  latitude   Float
  longitude  Float
  timezone   String
  users      UserToTrip[]
  activities ActivityToTrip[] @relation("ActivityToTrip_Trip")
}

model User {
  id                   String           @id @default(uuid())
  email                String           @unique
  firstName            String
  lastName             String?
  password             String
  profilePic           Int
  resetPasswordToken   String?          @unique
  resetPasswordExpires DateTime?
  trips                UserToTrip[]
  UserToActivity       UserToActivity[]
}

model UserToActivity {
  id         String   @id @default(uuid())
  userId     String
  activityId String
  user       User     @relation(fields: [userId], references: [id])
  activity   Activity @relation(fields: [activityId], references: [id])
}

model UserToTrip {
  id     String @id @default(uuid())
  userId String
  tripId String
  role   Role
  user   User   @relation(fields: [userId], references: [id])
  trip   Trip   @relation(fields: [tripId], references: [id])
}
